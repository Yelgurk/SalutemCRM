<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
			 xmlns:controls="using:SalutemCRM.Control"
			 xmlns:conv="using:SalutemCRM.Converter"
			 xmlns:vm="clr-namespace:SalutemCRM.ViewModels"
			 x:DataType="vm:CRUSWarehouseItemControlViewModel"
             x:Class="SalutemCRM.Control.CRUSWarehouseItemControl"
			 Design.Width="600"
			 Design.Height="400"
			 Background="{Binding $self.DataContext.Source.DynamicColor}">
	<UserControl.DataContext>
		<vm:CRUSWarehouseItemControlViewModel/>
	</UserControl.DataContext>
	<UserControl.Resources>
		<conv:RowStatusConverter x:Key="RowStatusConverter"/>
	</UserControl.Resources>


	<Grid Classes="pages_container"
		  Classes.is_disabled="{Binding !$parent[UserControl].IsEnabled}"
		  Grid.Column="1">

		<Grid Classes.selected_page="{Binding Source.ActivePage[0]}"
			  RowDefinitions="auto, *">

			<DockPanel HorizontalAlignment="Center"
					   Margin="0 10 0 5">
				<TextBlock Classes="text_header"
						   Text="Детали"
						   Margin="0"
						   VerticalAlignment="Center"/>
				
				<ItemsControl Classes="custom inline" Margin="15 0 0 0">
					<RadioButton GroupName="ProdTempl_ViewSelGroup" Content="Список"
								 IsChecked="{Binding Source.IsListPreview}"/>
					<RadioButton GroupName="ProdTempl_ViewSelGroup" Content="Таблица"
								 IsChecked="{Binding !Source.IsListPreview}"/>
				</ItemsControl>
			</DockPanel>

			<Grid RowDefinitions="auto, *"
				  ColumnDefinitions="*, auto, auto">
				<TextBox Classes="custom header always"
						 Grid.Row="0"
						 Watermark="Поиск"
						 Margin="10 5 5 5"
						 Text="{Binding Source.SearchInputStr}"/>

				<Button Classes="custom iconed pink close rounded"
						Grid.Column="1"
						Width="{Binding $self.Bounds.Height}"
						CornerRadius="5"
						Margin="0 5 10 5"
						Command="{Binding ClearSearchCommand}"/>

				<Button Classes="custom iconed orange plus rounded"
						Grid.Column="2"
						Width="{Binding $self.Bounds.Height}"
						CornerRadius="5"
						Margin="-5 5 10 5"
						IsVisible="{Binding Source.IsFuncAddNewAvailable}"
						Command="{Binding GoAddCommand}"/>

				<ListBox Classes="custom unmarked zebra"
						 Grid.Row="1" Grid.ColumnSpan="3"
						 ClipToBounds="True"
						 ItemsSource="{Binding Source.WarehouseItems}"
						 SelectedItem="{Binding Source.SelectedItem}"
						 IsVisible="{Binding Source.IsListPreview}">
					<ListBox.ItemTemplate>
						<DataTemplate>
							<Label Classes="expander">
								<Label.Tag>
									<Grid>
										<Grid ColumnDefinitions="auto, auto, *"
											  RowDefinitions="*, *, *"
											  VerticalAlignment="Center"
											  Margin="10 0 0 0">
											<DockPanel Grid.Column="1" Grid.Row="0"
													   Margin="0 0 0 -3" VerticalAlignment="Center">
												<TextBlock FontSize="15" Text="{Binding InnerName}" FontWeight="SemiBold"/>
												<TextBlock FontSize="15" Text=", "/>
												<TextBlock FontSize="15" Text="{Binding Category.Name, FallbackValue=[без категории]}"/>
											</DockPanel>
											<DockPanel Grid.Column="1" Grid.Row="1">
												<TextBlock FontSize="15" Text="Код: "/>
												<TextBlock FontSize="15" Text="{Binding InnerCode}"/>
											</DockPanel>
											<DockPanel Grid.Column="1" Grid.Row="2"
													   VerticalAlignment="Center">
												<TextBlock FontSize="12" Text="Всего на складе: "/>
												<TextBlock FontSize="12" Text="{Binding TotalInStockCount, FallbackValue=0}"/>
												<TextBlock FontSize="12" Text="{Binding MesurementUnit}"/>
											</DockPanel>
											
											<Image Tag="{Binding}" Source="{Binding QRBitmap}" Loaded="Image_Loaded"
												   Grid.Column="0" Grid.RowSpan="3" Margin="-10 -10 0 -10"
												   Width="80"
												   IsVisible="{Binding $parent[ListBoxItem].IsSelected}"/>
										</Grid>
										<Button HorizontalAlignment="Right"
												Margin="0 2 0 2"
												Classes="custom iconed blue rounded sys edit"
												Command="{Binding $parent[UserControl].DataContext.GoEditCommand}"
												CommandParameter="{Binding}"
												IsVisible="{Binding $parent[UserControl].DataContext.Source.IsFuncEditAvailable}"/>
									</Grid>
								</Label.Tag>
								<Label.Content>
									<ItemsControl ItemsSource="{Binding WarehouseSupplying}">
										<ItemsControl.ItemTemplate>
											<DataTemplate>
												<DockPanel>
													<TextBlock FontSize="14" FontWeight="SemiBold" Text="{Binding InStockCount}"/>
													<TextBlock FontSize="14" FontWeight="SemiBold" Text=" "/>
													<TextBlock FontSize="14" FontWeight="SemiBold" Text="{Binding $parent[Label].DataContext.MesurementUnit}"/>
													<TextBlock FontSize="14" Text="{Binding VendorName}"/>
													<TextBlock FontSize="14" Text=", код: "/>
													<TextBlock FontSize="14" Text="{Binding VendorCode}"/>
												</DockPanel>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</Label.Content>
							</Label>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>

				<DataGrid Grid.Row="1" Grid.ColumnSpan="3" Margin="0 5 0 0"
						  Classes="custom bind_to_warehouseItem"
						  ItemsSource="{Binding Source.WarehouseItems}"
						  SelectedItem="{Binding Source.SelectedItem}"
						  IsVisible="{Binding !Source.IsListPreview}">
					<DataGrid.Columns>
						<DataGridTextColumn Header="Название" Binding="{Binding InnerName}"/>
						<DataGridTextColumn Header="Код" Binding="{Binding InnerCode}"/>
						<DataGridTextColumn Header="Ед. изм." Binding="{Binding MesurementUnit}"/>
						<DataGridTextColumn Header="На складе" Binding="{Binding TotalInStockCount, StringFormat={}{0:0.###}}"/>
						<DataGridTextColumn Header="Лимит" Binding="{Binding CountRequired, StringFormat={}{0:0.###}}"/>
						<DataGridTextColumn Header="Статус" Binding="{Binding CountInStockStateToString}"/>
						<DataGridTextColumn Header="~BYN ед." Binding="{Binding BYNPriceForSingleInStock, StringFormat='{}{0:0.###} руб'}"
											IsVisible="{Binding $parent[UserControl].DataContext.Source.IsMoneyStatVisible}" />
						<DataGridTextColumn Header="~BYN итого" Binding="{Binding BYNPriceForTotalInStock, StringFormat='{}{0:0.###} руб'}"
											IsVisible="{Binding $parent[UserControl].DataContext.Source.IsMoneyStatVisible}"/>
					</DataGrid.Columns>
				</DataGrid>
			</Grid>
		</Grid>

		<Grid Classes.selected_page="{Binding Source.ActivePage[1]}"
			  RowDefinitions="auto, *">

			<DockPanel HorizontalAlignment="Center"
					   Margin="0 5 0 0">
				<Button Classes="custom orange"
						Height="30"
						Content="Полный список"
						Command="{Binding GoBackCommand}"/>

				<TextBlock Classes="text_header"
						   Text=" &gt; Новая позиция"/>
			</DockPanel>

			<Grid>
				<ScrollViewer VerticalScrollBarVisibility="Auto">
					<StackPanel Classes="background">

						<TextBox Classes="custom header new_input"
								 Watermark="Название"
								 Text="{Binding Source.TempItem.InnerName}"/>

						<TextBox Classes="custom header new_input"
								 Watermark="Внутренний код"
								 Text="{Binding Source.InnerCodeNew}"/>

						<Grid ColumnDefinitions="2*, 3*"
							  Classes="background">

							<StackPanel Classes="background">
								<TextBlock Classes="new_input" Text="Ед. измерения"
										   Foreground="{Binding #Control_SelectMesUnit.BorderBrush}"/>
								<ComboBox Classes="custom new_input"
										  x:Name="Control_SelectMesUnit"
										  ItemsSource="{Binding Source.MesureUnits}"
										  SelectedItem="{Binding Source.TempItem.MesurementUnit}">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding}"/>
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
							</StackPanel>
							
							<TextBox Classes="custom header new_input"
									 Watermark="Лимит, уведомления"
									 Text="{Binding Source.TempItem.CountRequired}"
									 VerticalAlignment="Bottom"
									 Grid.Column="1"/>
						</Grid>

						<Grid ColumnDefinitions="*, *"
							  RowDefinitions="auto, auto, auto"
							  Margin="0 20 0 10">
							<TextBlock Text="Категория позиции"
									   FontWeight="SemiBold"
									   Grid.ColumnSpan="2"
									   HorizontalAlignment="Center"/>
							<TextBlock Text="Старая"
									   Grid.Row="1"
									   HorizontalAlignment="Center"/>
							<TextBlock Text="Новая"
									   Grid.Row="1"
									   Grid.Column="1"
									   HorizontalAlignment="Center"/>
							<TextBlock Text="{Binding Source.TempItem.Category.Name, FallbackValue=[не присвоена]}"
									   Grid.Row="2"
									   HorizontalAlignment="Center"
									   FontWeight="SemiBold"/>
							<TextBlock Text="{Binding Source.WarehouseCategory.Name, FallbackValue=[не присвоена]}"
									   Grid.Row="2"
									   Grid.Column="1"
									   HorizontalAlignment="Center"
									   FontWeight="SemiBold"/>
						</Grid>
						
						<Button Classes="custom orange whiteText"
								Height="40"
								Margin="10 5"
								HorizontalAlignment="Stretch"
								Content="Добавить новый +"
								FontWeight="SemiBold"
								Command="{Binding $parent[UserControl].DataContext.AddNewCommand}"/>
					</StackPanel>
				</ScrollViewer>
			</Grid>
		</Grid>

		<Grid Classes.selected_page="{Binding Source.ActivePage[2]}"
			  RowDefinitions="auto, *">

			<DockPanel HorizontalAlignment="Center"
					   Margin="0 5 0 0">
				<Button Classes="custom orange"
						Height="30"
						Content="Отмена"
						Command="{Binding GoBackCommand}"/>

				<TextBlock Classes="text_header"
						   Text=" Редактор {"/>
				<TextBlock Classes="text_header"
						   Text="{Binding Source.EditItem.InnerName}"/>
				<TextBlock Classes="text_header"
						   Text="}"/>
			</DockPanel>

			<Grid>
				<ScrollViewer VerticalScrollBarVisibility="Auto">
					<StackPanel Classes="background">
						<TextBox Classes="custom header new_input"
								 Watermark="Название"
								 Text="{Binding Source.TempItem.InnerName}"/>

						<TextBox Classes="custom header new_input"
								 Watermark="Внутренний код [заблокирован]"
								 Text="{Binding Source.TempItem.InnerCode}"
								 IsReadOnly="True"/>

						<Grid ColumnDefinitions="2*, 3*"
							  Classes="background">

							<StackPanel Classes="background">
								<TextBlock Classes="new_input" Text="Ед. измерения"
										   Foreground="{Binding #Control_SelectMesUnit_2.BorderBrush}"/>
								<ComboBox Classes="custom new_input"
										  x:Name="Control_SelectMesUnit_2"
										  ItemsSource="{Binding Source.MesureUnits}"
										  SelectedItem="{Binding Source.TempItem.MesurementUnit}">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding}"/>
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
							</StackPanel>

							<TextBox Classes="custom header new_input"
									 Watermark="Лимит, уведомления"
									 Text="{Binding Source.TempItem.CountRequired}"
									 VerticalAlignment="Bottom"
									 Grid.Column="1"/>
						</Grid>

						<Grid ColumnDefinitions="*, *"
							  RowDefinitions="auto, auto, auto"
							  Margin="0 20 0 10">
							<TextBlock Text="Категория позиции"
									   FontWeight="SemiBold"
									   Grid.ColumnSpan="2"
									   HorizontalAlignment="Center"/>
							<TextBlock Text="Старая"
									   Grid.Row="1"
									   HorizontalAlignment="Center"/>
							<TextBlock Text="Новая"
									   Grid.Row="1"
									   Grid.Column="1"
									   HorizontalAlignment="Center"/>
							<TextBlock Text="{Binding Source.EditItem.Category.Name, FallbackValue=[не присвоена]}"
									   Grid.Row="2"
									   HorizontalAlignment="Center"
									   FontWeight="SemiBold"/>
							<TextBlock Text="{Binding Source.WarehouseCategory.Name, FallbackValue=[не присвоена]}"
									   Grid.Row="2"
									   Grid.Column="1"
									   HorizontalAlignment="Center"
									   FontWeight="SemiBold"/>
						</Grid>

						<Button Classes="custom orange whiteText"
								Height="40"
								Margin="10 5"
								HorizontalAlignment="Stretch"
								Content="Применить изменения"
								FontWeight="SemiBold"
								Command="{Binding $parent[UserControl].DataContext.EditCommand}"/>
					</StackPanel>
				</ScrollViewer>
			</Grid>
		</Grid>

	</Grid>

	<UserControl.Styles>
		<Style Selector="Grid.pages_container.is_disabled">
			<Setter Property="Opacity" Value="0.5"/>
		</Style>
		
		<Style Selector="Grid.pages_container.is_disabled TextBlock#PART_FloatingWatermark">
			<Setter Property="Opacity" Value="0"/>
		</Style>
			
		<Style Selector="Grid.pages_container > Grid > Grid">
			<Setter Property="VerticalAlignment" Value="Stretch"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="Background" Value="{Binding $parent[UserControl].Background}"/>
		</Style>

		<Style Selector=" Grid.pages_container > Grid">
			<Setter Property="IsVisible" Value="False"/>
		</Style>
		
		<Style Selector=" Grid.pages_container > Grid.selected_page">
			<Setter Property="IsVisible" Value="True"/>
		</Style>

		<Style Selector="Grid.pages_container > Grid > Grid">
			<Setter Property="Grid.Row" Value="1"/>
		</Style>

		<Style Selector="Grid.pages_container TextBlock.text_header">
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="Margin" Value="0 10"/>
		</Style>

		<Style Selector="StackPanel.background, Grid.background">
			<Setter Property="Background" Value="{Binding $parent[UserControl].Background}"/>
		</Style>

		<Style Selector="TextBlock.new_input">
			<Setter Property="Margin" Value="25 6 10 -12"/>
			<Setter Property="FontWeight" Value="SemiBold"/>
			<Setter Property="Foreground" Value="{DynamicResource Primary_Gray}"/>
		</Style>

		<Style Selector="TextBox.custom.new_input">
			<Setter Property="Margin" Value="10 16 10 0"/>
		</Style>

		<Style Selector="Button.custom.new_input">
			<Setter Property="Margin" Value="0 16 10 0"/>
		</Style>

		<Style Selector="ComboBox.custom.new_input">
			<Setter Property="Margin" Value="10 12 10 0"/>
		</Style>

		<Style Selector="DataGrid.custom.bind_to_warehouseItem DataGridRow">
			<Setter Property="Background" Value="{Binding CountInStockState, Converter={StaticResource RowStatusConverter}}"/>
		</Style>
	</UserControl.Styles>
</UserControl>