<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="SalutemCRM.Control.OrderManufactureControl"
			 xmlns:vm="using:SalutemCRM.ViewModels"
			 xmlns:control="using:SalutemCRM.Control"
			 xmlns:f_control="using:SalutemCRM.FunctionalControl">
	<Grid ColumnDefinitions="*, 1, *, 1, *">
		<Border Grid.Column="1"
				Grid.ColumnSpan="3"
				BorderThickness="1 0"
				BorderBrush="{DynamicResource Primary_Gray}"/>
		
		<Grid Grid.Column="0" 
			  RowDefinitions="auto, auto, auto, *, auto">
			<TextBlock Text="{Binding Source.OrderOnPrep.Id, StringFormat='Счёт #{0}'}"
					   HorizontalAlignment="Left"
					   VerticalAlignment="Center"
					   FontSize="16"
					   FontWeight="SemiBold"
					   Margin="5"/>

			<TextBlock Grid.Row="1"
					   Text="Дополнительная информация:"
					   Margin="5 5 5 0"/>
			
			<ScrollViewer Grid.Row="2"
						  MaxHeight="150"
						  Margin="0 0 0 5">
				<TextBlock Text="{Binding Source.OrderOnPrep.AdditionalInfo,
								  FallbackValue='[информация отсутствует]'}"
						   TextWrapping="Wrap"
						   HorizontalAlignment="Left"
						   VerticalAlignment="Top"
						   Margin="5"/>
			</ScrollViewer>

			<ScrollViewer Grid.Row="3"
						  VerticalScrollBarVisibility="Hidden"
						  HorizontalScrollBarVisibility="Visible">
				<DataGrid Classes="custom"
						  VerticalScrollBarVisibility="Hidden"
						  ItemsSource="{Binding Source.OrderOnPrep.Manufactures}"
						  SelectedItem="{Binding Source.SelectedProduct}"
						  Width="{Binding $parent[ScrollViewer].Bounds.Width}"
						  IsReadOnly="True"
						  Background="White">
					<DataGrid.Columns>
						<DataGridTemplateColumn Width="*" Header="#, Изделие">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<DockPanel>
										<TextBox Classes="custom "
												 Watermark="# изд."
												 Text="{Binding Code}"
												 MaxWidth="80"
												 Margin="5 5 0 5"
												 VerticalAlignment="Center"
												 IsVisible="{Binding HaveSerialNumber}"
												 IsEnabled="{Binding $parent[UserControl].DataContext.Source.OrderOnPrep.IsOrderAwaitManufacture}"/>

										<TextBlock Text="{Binding Name}"
												   TextWrapping="Wrap"
												   FontSize="15"
												   Margin="5"
												   VerticalAlignment="Center"/>
									</DockPanel>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>

						<DataGridTextColumn Header="Кол-во" Binding="{Binding Count}"/>
					</DataGrid.Columns>
				</DataGrid>
			</ScrollViewer>

			<StackPanel Grid.Row="4">
				<Button Classes="custom iconed rounded"
						Margin="5 5 5 0"
						HorizontalAlignment="Stretch"
						Command="{Binding GoBackCommand}"
						Classes.pink="{Binding Source.OrderOnPrep.IsOrderAwaitManufacture}"
						Classes.close="{Binding Source.OrderOnPrep.IsOrderAwaitManufacture}"
						Classes.back="{Binding !Source.OrderOnPrep.IsOrderAwaitManufacture}"
						Classes.orange="{Binding !Source.OrderOnPrep.IsOrderAwaitManufacture}">
					<Grid>
						<TextBlock Text="Отмена старта "
								   IsVisible="{Binding Source.OrderOnPrep.IsOrderAwaitManufacture}"/>
						<TextBlock Text="Назад "
								   IsVisible="{Binding !Source.OrderOnPrep.IsOrderAwaitManufacture}"/>
					</Grid>
				</Button>
				
				<Button Classes="custom iconed rounded ok"
						Classes.green="{Binding !Source.TryAcceptOrderBeginningInfo.Length}"
						Classes.orange="{Binding Source.TryAcceptOrderBeginningInfo.Length}"
						Content="{Binding Source.TryAcceptOrderBeginningInfo, StringFormat='Старт производства{0} '}"
						Margin="5"
						HorizontalAlignment="Stretch"
						Command="{Binding AcceptOrderStartManufacturingCommand}"
						IsVisible="{Binding Source.OrderOnPrep.IsOrderAwaitManufacture}"/>
				
				<Button Classes="custom iconed rounded edit blue"
						Content="Применить изменения"
						Margin="5"
						HorizontalAlignment="Stretch"
						Command="{Binding AcceptOrderUpdateInfoCommand}"
						IsVisible="{Binding !Source.OrderOnPrep.IsOrderAwaitManufacture}"/>
			</StackPanel>
		</Grid>


		<!--
			{Binding !Source.OrderOnPrep.IsOrderAwaitManufacture}
			для кнопок. Если производство не начато - то команда удалять,
			иначе команда ротации
			-->
		
		
		<Grid Grid.Column="2" 
			  RowDefinitions="auto, *, auto">
			<TextBlock Text="Задачи"
					   HorizontalAlignment="Center"
					   VerticalAlignment="Center"
					   FontSize="16"
					   FontWeight="SemiBold"
					   Margin="5"/>
			
			<ListBox Grid.Row="1"
					 Classes="custom zebra unmarked"
					 ItemsSource="{Binding Source.SelectedProduct.OrderProcesses}">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<Grid ColumnDefinitions="auto, auto, *"
							  RowDefinitions="auto, *, auto">
							<Button Classes="custom iconed rounded pink close"
									Grid.RowSpan="3"
									VerticalAlignment="Stretch"
									Margin="5"
									Command="{Binding $parent[UserControl].DataContext.RemoveOrderTaskCommand}"
									CommandParameter="{Binding}"
									IsVisible="{Binding !IsTaskRunning}"/>
							
							<Button Classes="custom iconed rounded blue collapse_up"
									Grid.Column="1"
									Grid.Row="0"
									VerticalAlignment="Stretch"
									Margin="5"
									IsEnabled="{Binding !IsFirstInQueue}"
									Command="{Binding $parent[UserControl].DataContext.MoveOrderTaksUpCommand}"
									CommandParameter="{Binding}"
									IsVisible="{Binding !IsTaskRunning}"/>
							
							<TextBlock Text="{Binding Queue, StringFormat='#{0}'}"
									   FontSize="18"
									   FontWeight="SemiBold"
									   HorizontalAlignment="Center"
									   VerticalAlignment="Center"
									   Grid.Column="1"
									   Grid.Row="1"
									   Margin="5"/>
							
							<Button Classes="custom iconed rounded blue collapse_down"
									Grid.Column="1"
									Grid.Row="2"
									VerticalAlignment="Stretch"
									Margin="5"
									IsEnabled="{Binding !IsLastInQueue}"
									Command="{Binding $parent[UserControl].DataContext.MoveOrderTaksDownCommand}"
									CommandParameter="{Binding}"
									IsVisible="{Binding !IsTaskRunning}"/>

							<StackPanel Grid.Column="2"
										Grid.RowSpan="3"
										IsVisible="{Binding !IsTaskRunning}">
								<TextBlock Text="{Binding OrderDuty.Name}"
										   FontSize="16"
										   FontWeight="SemiBold"/>
								<TextBlock Text="{Binding Employee.FullName, StringFormat='сотрудник - {0}'}"/>
								
								<TextBlock Text="старт до:"
										   FontSize="12"
										   Margin="0 8 0 2"/>
								<CalendarDatePicker SelectedDate="{Binding MustBeStartedDT}"/>
								<TimePicker SelectedTime="{Binding MustBeStartedTimeSpan}"/>

								<TextBlock Text="закончить до:"
										   FontSize="12"
										   Margin="0 8 0 2"/>
								<CalendarDatePicker SelectedDate="{Binding DeadlineDT}"/>
								<TimePicker SelectedTime="{Binding DeadlineTimeSpan}"/>
							</StackPanel>

							<StackPanel Grid.Column="2"
										Grid.RowSpan="3"
										IsVisible="{Binding IsTaskRunning}">
								<Grid ColumnDefinitions="*, *"
									  RowDefinitions="auto, *">
									<StackPanel Grid.ColumnSpan="2"
												Grid.Row="0">
										<TextBlock Text="{Binding OrderDuty.Name}"
												   FontSize="16"
											       FontWeight="SemiBold"/>
										<TextBlock Text="{Binding Employee.FullName, StringFormat='сотрудник - {0}'}"/>
									</StackPanel>

									<StackPanel Grid.Column="0"
												Grid.Row="1"
												Margin="5 0">
										<TextBlock Text="Цели"
												   HorizontalAlignment="Center"
												   FontSize="15"
												   FontWeight="SemiBold"/>
										
										<TextBlock Text="Начало:"
												   Margin="0 5 0 0"/>
										<TextBlock Text="{Binding MustBeStartedDT}"/>
										
										<TextBlock Text="Конец:"
												   Margin="0 5 0 0"/>
										<TextBlock Text="{Binding DeadlineDT}"/>
									</StackPanel>
									
									<StackPanel Grid.Column="1"
												Grid.Row="1"
												Margin="5 0">
										<TextBlock Text="Исполнение"
												   HorizontalAlignment="Center"
												   FontSize="15"
												   FontWeight="SemiBold"/>
										
										<TextBlock Text="Начато в:"
												   Margin="0 5 0 0"/>
										<TextBlock Text="{Binding StartedDT}"/>
										
										<TextBlock Text="{Binding CompletedDT, StringFormat='Закончено в:', TargetNullValue='В процессе!'}"
												   Margin="0 5 0 0"/>
										<TextBlock Text="{Binding CompletedDT, TargetNullValue=''}"/>
									</StackPanel>
								</Grid>
							</StackPanel>
						</Grid>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>

			<TextBlock Grid.Row="1"
					   Text="Изделие не выбрано"
					   HorizontalAlignment="Center"
					   VerticalAlignment="Center"
					   FontSize="16"
					   IsVisible="{Binding Source.SelectedProduct,
								   Converter={x:Static ObjectConverters.IsNull}}"/>
			<Grid Grid.Row="1"
				  HorizontalAlignment="Center"
				  VerticalAlignment="Center"
				  IsVisible="{Binding Source.SelectedProduct,
							  Converter={x:Static ObjectConverters.IsNotNull}}">
				<TextBlock Text="Сотрудники не закреплены"
						   FontSize="16"
						   IsVisible="{Binding !Source.SelectedProduct.OrderProcesses.Count}"/>
			</Grid>

			<Button Grid.Row="2"
					Classes="custom iconed rounded orange plus"
					Content="Задача"
					Margin="5"
					HorizontalAlignment="Stretch"
					Command="{Binding ShowOverlayAddTaskCommand}"/>
		</Grid>

		
		
		<Grid Grid.Column="4" RowDefinitions="auto, *, auto">
			<TextBlock Text="На выдачу"
					   HorizontalAlignment="Center"
					   VerticalAlignment="Center"
					   FontSize="16"
					   FontWeight="SemiBold"
					   Margin="5"/>

			<ScrollViewer Grid.Row="1"
						  VerticalScrollBarVisibility="Hidden"
						  HorizontalScrollBarVisibility="Visible">
				<DataGrid ItemsSource="{Binding Source.SelectedProduct.MaterialFlows}"
						  HorizontalScrollBarVisibility="Hidden"
						  Width="{Binding $parent[ScrollViewer].Bounds.Width}"
						  IsReadOnly="{Binding !$parent[UserControl].DataContext.Source.OrderOnPrep.IsOrderAwaitManufacture}">
					<DataGrid.Columns>
						<DataGridTemplateColumn Width="auto"
												IsVisible="{Binding $parent[UserControl].DataContext.Source.OrderOnPrep.IsOrderAwaitManufacture}">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<Button Classes="custom iconed rounded pink close"
										    Command="{Binding $parent[UserControl].DataContext.RemoveMaterialFromBuilderCommand}"
											CommandParameter="{Binding}"
											Margin="5"/>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
						
						<DataGridTemplateColumn Width="auto"
												IsVisible="{Binding !$parent[UserControl].DataContext.Source.OrderOnPrep.IsOrderAwaitManufacture}">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<Button Classes="custom iconed rounded blue update"
										    Command="{Binding $parent[UserControl].DataContext.RunMaterialRotationCommand}"
											CommandParameter="{Binding}"
											Margin="5"/>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>

						<DataGridTextColumn Width="auto"
											IsReadOnly="False"
											Binding="{Binding CountReservedFromStock}">
							<DataGridTextColumn.Header>
								<TextBlock Text="Кол-во" Margin="0 0 -20 0"/>
							</DataGridTextColumn.Header>
						</DataGridTextColumn>


						<DataGridTemplateColumn Width="*" Header="Название">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<StackPanel VerticalAlignment="Center"
												Margin="5 0">
										<TextBlock Text="{Binding WarehouseItem.Category.Name, StringFormat='[{0}]'}"
												   TextWrapping="Wrap"
												   FontSize="12"
												   FontWeight="Bold"/>
										<TextBlock Text="{Binding WarehouseItem.InnerName}"
												   TextWrapping="Wrap"/>
									</StackPanel>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
					</DataGrid.Columns>
				</DataGrid>
			</ScrollViewer>

			<TextBlock Grid.Row="1"
					   Text="Изделие не выбрано"
					   HorizontalAlignment="Center"
					   VerticalAlignment="Center"
					   FontSize="16"
					   IsVisible="{Binding Source.SelectedProduct,
								   Converter={x:Static ObjectConverters.IsNull}}"/>
			<Grid Grid.Row="1"
				  HorizontalAlignment="Center"
				  VerticalAlignment="Center"
				  IsVisible="{Binding Source.SelectedProduct,
							  Converter={x:Static ObjectConverters.IsNotNull}}">
				<TextBlock Text="Не указаны материалы"
						   FontSize="16"
						   IsVisible="{Binding !Source.SelectedProduct.MaterialFlows.Count}"/>
			</Grid>

			<Button Grid.Row="2"
					Classes="custom iconed rounded orange plus"
					Content="Материал"
					Margin="5"
					HorizontalAlignment="Stretch"
					Command="{Binding ShowOverlayAddMaterialCommand}"/>
		</Grid>

		<Label Classes="OverlayControl" Tag="Добавить задачу"
			   IsVisible="{Binding Source.IsOverlayAddTask}">
			<Grid ColumnDefinitions="350, 350"
				  RowDefinitions="*, auto">
				<Label Classes="card rounded tag"
					   Tag="Выбор сотрудника"
					   Grid.Column="0"
					   Margin="5">
					<Label Background="White"
						   Padding="0 40 0 0">
						<ListBox Classes="custom zebra unmarked"
								 ItemsSource="{Binding Source.ManufactureEmployees}"
								 SelectedItem="{Binding Source.SelectedEmployee}">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<StackPanel Margin="5"
												HorizontalAlignment="Left"
												VerticalAlignment="Center">
										<TextBlock Text="{Binding UserRole.Name, StringFormat='[{0}]'}"
												   FontSize="12"
												   FontWeight="Bold"/>
										<TextBlock Text="{Binding FullName}"
												   FontSize="15"/>
									</StackPanel>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
					</Label>
				</Label>

				<Label Classes="card rounded tag"
					   Tag="Выбор задачи"
					   Grid.Column="1"
					   Margin="5">

					<Label Background="White"
						   Padding="0 40 0 0">
						<control:CRUSOrderDutyControl/>
					</Label>
				</Label>

				<Grid ColumnDefinitions="*, 5, *"
					  Grid.Row="2"
					  Grid.ColumnSpan="2"
					  Margin="0 10 0 0">
					<Button Classes="custom iconed rounded pink close"
							Content="Отмена "
							Grid.Column="0"
							HorizontalAlignment="Stretch"
							Command="{Binding HideOverlaysCommand}"/>

					<Button Classes="custom iconed rounded green plus"
							Content="Применить "
							Grid.Column="2"
							HorizontalAlignment="Stretch"
							Command="{Binding AddEmployeeTaskIntoProductionCommand}"/>
				</Grid>
			</Grid>
		</Label>
		
		<Label Classes="OverlayControl" Tag="Добавить материал"
			   IsVisible="{Binding Source.IsOverlayAddMaterial}">
			<Grid RowDefinitions="auto, *, auto">
				<CheckBox Content="Добавить из шаблона"
						  IsChecked="{Binding Source.IsMaterialTakenFromTemplate}"
						  HorizontalAlignment="Center"
						  VerticalAlignment="Center"
						  Margin="5"/>

				<Grid Grid.Row="1"
					  IsVisible="{Binding !Source.IsMaterialTakenFromTemplate}">
					<f_control:WarehouseGeneral Width="600"/>
				</Grid>

				<Grid Grid.Row="1"
					  IsVisible="{Binding Source.IsMaterialTakenFromTemplate}">
					<f_control:ProductTemplateControl Width="600"/>
				</Grid>

				<Grid ColumnDefinitions="*, 5, *"
					  Grid.Row="2"
					  Margin="0 10 0 0">
					<Button Classes="custom iconed rounded pink close"
							Content="Отмена "
							Grid.Column="0"
							HorizontalAlignment="Stretch"
							Command="{Binding HideOverlaysCommand}"/>

					<Button Classes="custom iconed rounded green plus"
							Content="Применить "
							Grid.Column="2"
							HorizontalAlignment="Stretch"
							Command="{Binding AddMaterialsIntoProductionCommand}"/>
				</Grid>
			</Grid>
		</Label>
		
		<Label Classes="OverlayControl" Tag="Заменить материал"
			   IsVisible="{Binding Source.IsOverlayMaterialRotation}">
			<Grid ColumnDefinitions="2*, 1*"
				  RowDefinitions="auto, *, auto, auto">
				<Border Grid.RowSpan="3"
						BorderThickness="0 0 1 0"
						BorderBrush="{DynamicResource Primary_Gray}"/>
				
				<Grid Grid.Column="0"
					  Grid.RowSpan="2"
					  Margin="5">
					<f_control:WarehouseGeneral/>
				</Grid>
				
				<Button Classes="custom iconed rounded orange plus"
						Grid.Row="2"
						Margin="0 0 5 0"
						HorizontalAlignment="Stretch"
						Content="В замену "
						Command="{Binding AddMaterialIntoRotationCommand}"/>

				<StackPanel Grid.Column="1">
					<TextBlock Text="Заменяемый материал"
							   HorizontalAlignment="Center"
							   FontSize="15"
							   FontWeight="SemiBold"
							   Margin="0 0 0 15"/>

					<Grid ColumnDefinitions="auto, *, auto, auto"
						  RowDefinitions="auto, auto, auto, 100"
						  HorizontalAlignment="Stretch"
						  Margin="10 0 0 30">
						<TextBlock Text="{Binding Source.MaterialInRotation.WarehouseItem.Category.Name, StringFormat='[{0}]'}"
								   FontSize="12"
								   FontWeight="Bold"
								   Grid.Column="0"
								   Grid.Row="0"/>
						<TextBlock Text="{Binding Source.MaterialInRotation.WarehouseItem.InnerName}"
								   FontSize="15"
								   Grid.Column="0"
								   Grid.Row="1"/>

						<TextBlock Text="{Binding Source.MaterialInRotation.CountReservedFromStock, StringFormat='Кол-во использовано: {0}'}"
								   TextWrapping="Wrap"
								   HorizontalAlignment="Right"
								   VerticalAlignment="Center"
								   Grid.Column="1"
								   Grid.ColumnSpan="3"
								   Grid.RowSpan="2"/>

						<TextBlock Text="Будет возвращено на склад:"
								   HorizontalAlignment="Right"
								   VerticalAlignment="Center"
								   Margin="0 0 5 0"
								   Grid.ColumnSpan="3"
								   Grid.Row="2"/>
						<TextBox Classes="csutom"
								 Text="{Binding Source.MaterialInRotation.CountWillBeReturnedToStock}"
								 Grid.Column="3"
								 Grid.Row="2"/>

						<TextBox Classes="custom new_input"
								 Grid.ColumnSpan="4"
								 Grid.Row="3"
								 Margin="0 10 0 0"
								 Watermark="Пояснение к замене:"
								 Text="{Binding Source.AdditionalInfoForMatrerialRotation}"
								 TextWrapping="Wrap"
								 AcceptsReturn="True"/>
					</Grid>

					<TextBlock Text="На замену"
							   HorizontalAlignment="Center"
							   FontSize="15"
							   FontWeight="SemiBold"
							   Margin="0 0 0 15"/>
				</StackPanel>

				<ScrollViewer Grid.Column="1"
							  Grid.Row="1"
							  Grid.RowSpan="2">
					<DataGrid ItemsSource="{Binding Source.MaterialInRotation.ExchangedMaterials}">
						<DataGrid.Columns>
							<DataGridTemplateColumn Width="auto">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Button Classes="custom iconed rounded pink close"
												Command="{Binding $parent[UserControl].DataContext.RemoveMaterialFromRotationCommand}"
												CommandParameter="{Binding}"
												Margin="0 5"/>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>

							<DataGridTextColumn Width="auto"
												IsReadOnly="False"
												Binding="{Binding CountReservedFromStock}">
								<DataGridTextColumn.Header>
									<TextBlock Text="Кол-во" Margin="0 0 -20 0"/>
								</DataGridTextColumn.Header>
							</DataGridTextColumn>

							<DataGridTextColumn Width="*" Header="Название" Binding="{Binding WarehouseItem.InnerName}"
												IsReadOnly="True"/>
						</DataGrid.Columns>
					</DataGrid>
				</ScrollViewer>

				<Grid ColumnDefinitions="*, 5, *"
					  Grid.Row="3"
					  Grid.ColumnSpan="2"
					  Margin="0 10 0 0">
					<Button Classes="custom iconed rounded pink close"
							Content="Отмена "
							Grid.Column="0"
							HorizontalAlignment="Stretch"
							Command="{Binding CancelMaterialRotationCommand}"/>

					<Button Classes="custom iconed rounded green ok"
							Content="Применить "
							Grid.Column="2"
							HorizontalAlignment="Stretch"
							Command="{Binding AcceptMaterialRotationCommand}"/>
				</Grid>
			</Grid>
		</Label>
	</Grid>


	<UserControl.Styles>
		<Style Selector="Label.OverlayControl">
			<Setter Property="Grid.ColumnSpan" Value="5"/>
			<Setter Property="Template">
				<ControlTemplate>
					<Grid>
						<Grid Background="Black"
							  Opacity="0.33"/>
						<Label Classes="card rounded tag"
							   Tag="{TemplateBinding Tag}"
							   HorizontalAlignment="Center"
							   VerticalAlignment="Center"
							   Margin="50">
							<ContentPresenter Content="{TemplateBinding Content}"
											  Background="White"
											  Padding="10 40 10 10"/>
						</Label>
					</Grid>
				</ControlTemplate>
			</Setter>
		</Style>
	</UserControl.Styles>
</UserControl>
