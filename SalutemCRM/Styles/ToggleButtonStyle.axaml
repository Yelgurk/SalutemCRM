<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<Styles.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceInclude Source="avares://SalutemCRM/Assets/Color.axaml"/>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Styles.Resources>

	<Design.PreviewWith>
		<Grid Height="800"
			  Width="300">
			<StackPanel VerticalAlignment="Center">
				<ToggleButton Classes="custom whiteText orange demo" IsEnabled="False" Margin="0 0 0 5"/>
				<ToggleButton Classes="custom orange stretch demo" Margin="0 0 0 5"/>
				<ToggleButton Classes="custom demo" Margin="0 0 0 5"/>
				<ToggleButton Classes="custom pink demo" Margin="0 0 0 5"/>
				<ToggleButton Classes="custom bold green demo" Margin="0 0 0 5"/>
				
				<ToggleButton Classes="custom orange demo" Margin="0 0 0 5"/>

				<Label Height="80" Margin="0" Padding="0">
					<ToggleButton Classes="iconed close pink" Margin="0 0 0 5"/>
				</Label>

				<ToggleButton Classes="iconed demo plus orange" IsEnabled="False" Margin="0 0 0 5"/>
				<ToggleButton Classes="iconed edit orange" Margin="0 0 0 5"/>

				<Label Height="80" Margin="0" Padding="0">
					<ToggleButton Classes="iconed ok green" Margin="0 0 0 5"/>
				</Label>

				<ToggleButton Classes="iconed eye blue" Margin="0 0 0 5" Command=""/>
				<ToggleButton Classes="iconed close red sys" Margin="0 0 0 5"/>
				<ToggleButton Classes="iconed resize darkBlue sys" Margin="0 0 0 5"/>
				<ToggleButton Classes="iconed hide grey sys" Margin="0 0 0 5"/>
				<ToggleButton Classes="iconed account green sys" Margin="0 0 0 5"/>
			</StackPanel>
		</Grid>
	</Design.PreviewWith>

	<Style Selector="ToggleButton.demo">
		<Setter Property="Content" Value="Проверка"/>
	</Style>
	
	<Style Selector="ToggleButton.custom">
		<Setter Property="Background" Value="{DynamicResource Primary_Gray}"/>
		<Setter Property="MinWidth" Value="30"/>
		<Setter Property="MinHeight" Value="30"/>
		<Setter Property="Padding" Value="20 0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="FontFamily" Value="{StaticResource OpenSans}"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="FontWeight" Value="Regular"/>
		<Setter Property="Foreground" Value="{DynamicResource Primary_DarkBlue}"/>
		<Setter Property="CornerRadius" Value="5"/>
		<Setter Property="Effect">
			<DropShadowEffect
				BlurRadius="5"
				OffsetX="0"
				OffsetY="0"
				Opacity="0.15"/>
		</Setter>
	</Style>
	
	<Style Selector="ToggleButton.custom.whiteText">
		<Setter Property="Foreground" Value="White"/>
	</Style>

	<Style Selector="ToggleButton.custom.bold">
		<Setter Property="FontWeight" Value="SemiBold"/>
	</Style>

	<Style Selector="ToggleButton.custom.stretch">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
	</Style>

	<!-- ToggleButton - iconed (small/only icons) + colors -->

	<Style Selector="ToggleButton.iconed">
		<Setter Property="Template">
			<ControlTemplate>
				<Border>
					<Grid ColumnDefinitions="*, auto, *">
						<Label Content="{TemplateBinding Content}"
							   Padding="0"
							   FontSize="16"
							   VerticalAlignment="Center"/>
						<Image Width="24"
							   Height="24"
							   Grid.Column="1"/>
					</Grid>
				</Border>
			</ControlTemplate>
		</Setter>
	</Style>

	<Style Selector="ToggleButton.iconed:disabled /template/ Border">
		<Setter Property="Background" Value="Gray"/>
		<Setter Property="Opacity" Value="0.5"/>
	</Style>

	<Style Selector="ToggleButton.iconed, ToggleButton.custom">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
	</Style>

	<Style Selector="ToggleButton.iconed /template/ Border, ToggleButton.custom /template/ Border">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="CornerRadius" Value="0"/>
		<Setter Property="Padding" Value="5"/>
	</Style>

	<Style Selector="ToggleButton.rounded /template/ Border">
		<Setter Property="CornerRadius" Value="{Binding $parent[ToggleButton].CornerRadius}"/>
	</Style>

	<Style Selector="ToggleButton.iconed /template/ Border, ToggleButton.custom /template/ Border">
		<Setter Property="Background" Value="{Binding $parent[ToggleButton].Background}"/>
	</Style>

	<Style Selector="ToggleButton.close /template/ Grid > Image">
		<Setter Property="Source" Value="avares://SalutemCRM/Assets/Icon/Close.png"/>
	</Style>

	<Style Selector="ToggleButton.plus /template/ Grid > Image">
		<Setter Property="Source" Value="avares://SalutemCRM/Assets/Icon/Plus.png"/>
	</Style>

	<Style Selector="ToggleButton.ok /template/ Grid > Image">
		<Setter Property="Source" Value="avares://SalutemCRM/Assets/Icon/Ok.png"/>
	</Style>

	<Style Selector="ToggleButton.edit /template/ Grid > Image">
		<Setter Property="Source" Value="avares://SalutemCRM/Assets/Icon/Edit.png"/>
	</Style>

	<Style Selector="ToggleButton.eye /template/ Grid > Image">
		<Setter Property="Source" Value="avares://SalutemCRM/Assets/Icon/Eye.png"/>
	</Style>

	<Style Selector="ToggleButton.resize /template/ Grid > Image">
		<Setter Property="Source" Value="avares://SalutemCRM/Assets/Icon/Resize.png"/>
	</Style>

	<Style Selector="ToggleButton.hide /template/ Grid > Image">
		<Setter Property="Source" Value="avares://SalutemCRM/Assets/Icon/Minimize.png"/>
	</Style>

	<Style Selector="ToggleButton.account /template/ Grid > Image">
		<Setter Property="Source" Value="avares://SalutemCRM/Assets/Icon/Account.png"/>
	</Style>

	<Style Selector="ToggleButton.collapse_up /template/ Grid > Image">
		<Setter Property="Source" Value="avares://SalutemCRM/Assets/Icon/Collapse_up.png"/>
	</Style>

	<Style Selector="ToggleButton.collapse_down /template/ Grid > Image">
		<Setter Property="Source" Value="avares://SalutemCRM/Assets/Icon/Collapse_down.png"/>
	</Style>

	<Style Selector="ToggleButton.orange">
		<Setter Property="Background" Value="{DynamicResource Primary_Yellow}"/>
	</Style>

	<Style Selector="ToggleButton.green">
		<Setter Property="Background" Value="{DynamicResource Sys_Green}"/>
	</Style>

	<Style Selector="ToggleButton.blue">
		<Setter Property="Background" Value="{DynamicResource Alt_SkyBlue}"/>
	</Style>

	<Style Selector="ToggleButton.darkBlue">
		<Setter Property="Background" Value="{DynamicResource Sys_Blue}"/>
	</Style>

	<Style Selector="ToggleButton.pink">
		<Setter Property="Background" Value="{DynamicResource Alt_Pink}"/>
	</Style>

	<Style Selector="ToggleButton.red">
		<Setter Property="Background" Value="{DynamicResource Sys_Red}"/>
	</Style>

	<Style Selector="ToggleButton.grey">
		<Setter Property="Background" Value="{DynamicResource Alt_Grey}"/>
	</Style>

	<Style Selector="ToggleButton.iconed:pointerover /template/ Border, ToggleButton.custom:pointerover /template/ Border">
		<Setter Property="Background" Value="{DynamicResource Alt_Grey}"/>
	</Style>

	<Style Selector="ToggleButton.iconed:pressed /template/ Border, ToggleButton.custom:pressed /template/ Border">
		<Setter Property="Background" Value="{DynamicResource Primary_Gray}"/>
	</Style>
	
	<!-- ToggleButton - system -->

	<Style Selector="ToggleButton.sys /template/ Border">
		<Setter Property="Background" Value="Transparent"/>
	</Style>

	<Style Selector="ToggleButton.sys:pointerover /template/ Border">
		<Setter Property="Background" Value="{Binding $parent[ToggleButton].Background}"/>
	</Style>

	<Style Selector="ToggleButton.sys:pressed /template/ Border">
		<Setter Property="Background" Value="{DynamicResource Primary_Gray}"/>
	</Style>
</Styles>
