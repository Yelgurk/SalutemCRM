<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="using:SalutemCRM.ControlTemplated"
		xmlns:crus="using:SalutemCRM.Control"
		xmlns:enums="using:SalutemCRM.Domain.Model"
		xmlns:vm="using:SalutemCRM.ViewModels">
	<Design.PreviewWith>
		<Grid Width="800" Height="800">
			<controls:OrderEditorControl />
		</Grid>
	</Design.PreviewWith>

	<Style Selector="controls|OrderEditorControl">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Grid DataContext="{TemplateBinding VM}"
					  Name="PART_TemplatedControl_OrderEditorContainer"
					  Background="WhiteSmoke">
					<ScrollViewer Padding="0 0 16 0">
						<StackPanel>
							<Label Classes="card tag"
								   Tag="Форма"
								   Margin="5">
								<Grid Background="White">
									<ComboBox Classes="custom"
										ItemsSource="{x:Static enums:EnumToString.OrderTypeToString}"
										SelectedIndex="{Binding OrderSource.OrderType, RelativeSource={RelativeSource TemplatedParent}}"
										Margin="5 40 5 5"/>
								</Grid>
							</Label>

							<Grid Height="400">
								<Label Classes="card tag"
								   Tag="Выбор клиента"
								   Background="White"
								   Margin="5"
								   IsVisible="{Binding OrderSource.IsCustomerOrder, RelativeSource={RelativeSource TemplatedParent}}">
									<crus:CRUSClientControl DataContext="{TemplateBinding ControlInjection, Mode=OneWayToSource}"/>
								</Label>

								<Label Classes="card tag"
									   Tag="Выбор поставщика"
									   Background="White"
									   Margin="5"
									   IsVisible="{Binding !OrderSource.IsCustomerOrder, RelativeSource={RelativeSource TemplatedParent}}">
									<crus:CRUSVendorControl DataContext="{TemplateBinding ControlInjection, Mode=OneWayToSource}"/>
								</Label>
							</Grid>

							
							<Grid>
								<Label Classes="card tag"
									   Tag="Позиции на закупку (цены с НДС)"
									   Background="White"
									   Margin="5"
									   IsVisible="True">
									<Grid Background="White"
										  DataContext="{Binding VM.Source, RelativeSource={RelativeSource TemplatedParent}}"
										  RowDefinitions="auto, auto, auto, auto">
										<Grid ColumnDefinitions="*, 120, 90, 90, 120, 120, auto, 5"
											  Background="White"
											  Margin="0 35 0 0">
											<TextBox Classes="custom header "
													 Text="{Binding NewOrderWarehouseSupplyInput.WarehouseItem.InnerName}"
													 Watermark="Наименование"
													 Margin="5"
													 Grid.Column="0"/>
											<TextBox Classes="custom header "
													 Text="{Binding NewOrderWarehouseSupplyInput.OrderCount}"
													 Watermark="Кол-во"
													 Margin="0 5 5 5"
													 Grid.Column="1"/>
											<ComboBox Classes="custom header"
													  Margin="0 5 5 5"
													  Height="44"
													  SelectedItem="{Binding NewOrderWarehouseSupplyInput.WarehouseItem.MesurementUnit}"
													  ItemsSource="{Binding MesurementUnits}"
													  Grid.Column="2"/>
											<TextBox Classes="custom header "
													 Text="{Binding NewOrderWarehouseSupplyInput.PriceForSingleItemInput}"
													 Watermark="Цена/ед."
													 Margin="0 5 5 5"
													 Grid.Column="3"/>
											<ComboBox Classes="custom header"
													  Margin="0 5 5 5"
													  Height="44"
													  SelectedItem="{Binding NewOrderWarehouseSupplyInput.Currency}"
													  ItemsSource="{Binding CurrencyUnits}"
													  Grid.Column="4"/>
											<TextBox Classes="custom header "
													 Text="{Binding NewOrderWarehouseSupplyInput.UnitToBYNConversion}"
													 Watermark="Курс к BYN"
													 Margin="0 5 5 5"
													 Grid.Column="5"/>
											<Button Classes="custom iconed orange plus rounded"
													Grid.Column="6"
													Height="44"
													Width="{Binding $self.Bounds.Height}"
													CornerRadius="5"
													Margin="0 5 5 5"
													Command="{Binding VM.AddNewOrderItem, RelativeSource={RelativeSource TemplatedParent}}"/>
										</Grid>

										<TextBlock Text="Список"
												   FontSize="16"
												   HorizontalAlignment="Center"
												   Margin="10 5"
												   Grid.Row="1"/>
										<Border BorderThickness="0 0 0 1"
												BorderBrush="{DynamicResource Primary_DarkBlue}"
												Grid.Row="2"/>

										<DataGrid Grid.Row="3" Height="350"
												  Classes="custom"
												  VerticalScrollBarVisibility="Visible"
												  ItemsSource="{Binding VM.Source.OrderWarehouseSupplies, RelativeSource={RelativeSource TemplatedParent}}">
											<DataGrid.Columns>
												<DataGridTextColumn Header="№"				Binding="{Binding Id, StringFormat='{}{0}.'}"/>
												<DataGridTextColumn Header="Наименование"	Binding="{Binding WarehouseItem.InnerName}"/>
												<DataGridTextColumn Header="Кол-во"			Binding="{Binding OrderCount}"/>
												<DataGridTextColumn Header="Ед. изм."		Binding="{Binding WarehouseItem.MesurementUnit}"/>
												<DataGridTextColumn Header="Цена/ед"		Binding="{Binding PriceForSingleItemInput}"/>
												<DataGridTextColumn Header="Цена/итого"		Binding="{Binding PriceTotal}" IsReadOnly="True"/>
												<DataGridTextColumn Header="Валюта"			Binding="{Binding Currency}"/>
												<DataGridTextColumn Header="Курс"			Binding="{Binding UnitToBYNConversion}"/>
												<DataGridTextColumn Header="Итого/BYN"		Binding="{Binding OrderPriceTotalBYN}"/>
												<DataGridTemplateColumn Width="auto" Header="Убрать">
													<DataGridTemplateColumn.CellTemplate>
														<DataTemplate>
															<Button Classes="custom iconed pink rounded sys close"
																	Height="32" Width="{Binding $self.Bounds.Height}"
																	CornerRadius="5" Margin="0 5 5 5"
																	Command="{Binding #PART_TemplatedControl_OrderEditorContainer.DataContext.RemoveNewOrderItem}"
																	CommandParameter="{Binding}"/>
														</DataTemplate>
													</DataGridTemplateColumn.CellTemplate>
												</DataGridTemplateColumn>
											</DataGrid.Columns>
										</DataGrid>
									</Grid>
								</Label>

								<Label Classes="card tag"
									   Tag="Позиции на закупку"
									   Background="White"
									   Margin="5"
									   IsVisible="True">
									
								</Label>
							</Grid>


							<ItemsControl Classes="horizontal">
								<Label Classes="card tag"
									   Tag="Условия оплаты"
									   Background="White"
									   Margin="5">
									<StackPanel Background="White">
										<ComboBox Classes="custom"
												  ItemsSource="{x:Static enums:EnumToString.PaymentStatusToString}"
												  SelectedIndex="{Binding OrderSource.PaymentAgreement, RelativeSource={RelativeSource TemplatedParent}}"
												  Margin="5 40 5 5"/>

										<Grid ColumnDefinitions="*, auto"
											  RowDefinitions="auto, auto"
											  Background="White"
											  Margin="5">
											<TextBox Classes="custom header"
													 Text="{Binding OrderSource.PriceTotal, RelativeSource={RelativeSource TemplatedParent}}"
													 IsVisible="{Binding OrderSource.IsPaymentRequired, RelativeSource={RelativeSource TemplatedParent}}"
													 Watermark="Полная сумма по счету"
													 Grid.Row="0"
													 Margin="0 5 5 0"/>
											<TextBox Classes="custom header"
													 Text="{Binding OrderSource.PriceRequired, RelativeSource={RelativeSource TemplatedParent}}"
													 IsVisible="{Binding OrderSource.IsPaymentPartial, RelativeSource={RelativeSource TemplatedParent}}"
													 Watermark="Необходимая предоплата"
													 Grid.Row="1"
													 Margin="0 15 5 0"/>
											<ComboBox Classes="custom"
													  Classes.vertical_stretch="{Binding !OrderSource.IsPaymentPartial, RelativeSource={RelativeSource TemplatedParent}}"
													  IsVisible="{Binding OrderSource.IsPaymentRequired, RelativeSource={RelativeSource TemplatedParent}}"
													  Grid.Column="1"
													  Grid.RowSpan="2"
													  Margin="0 5 0 0"
													  VerticalAlignment="Stretch"/>
										</Grid>
									</StackPanel>
								</Label>

								<Label Classes="card tag" Margin="5"
									   Background="White"
									   Tag="Условия доставки"
									   IsVisible="True">

								</Label>
							</ItemsControl>

							<ItemsControl Classes="horizontal">
								<Label Classes="card tag" Margin="5"
									   Background="White"
									   Height="400"
									   Tag="Дополнительная информация">

								</Label>

								<Label Classes="card tag" Margin="5"
									   Background="White"
									   Height="400"
									   Tag="Прикрепляемые файлы">
									<crus:FileSelectorControl/>
								</Label>
							</ItemsControl>
						</StackPanel>
					</ScrollViewer>
				</Grid>
			</ControlTemplate>
		</Setter>
	</Style>

	<Style Selector="controls|OrderEditorControl ItemsControl.horizontal">
		<Setter Property="ItemsPanel">
			<ItemsPanelTemplate>
				<UniformGrid Columns="{
							 Binding $self.Bounds.Width,
							 Converter={StaticResource SizeToColumnsConv},
							 ConverterParameter=2}"
							 ClipToBounds="False"/>
			</ItemsPanelTemplate>
		</Setter>
	</Style>

	<Style Selector="controls|OrderEditorControl ComboBox.custom.vertical_stretch">
		<Setter Property="Height" Value="44"/>
		<Setter Property="Margin" Value="0 5 0 -44"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
	</Style>
</Styles>
